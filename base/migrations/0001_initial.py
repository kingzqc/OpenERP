# Generated by Django 2.2.26 on 2023-05-25 09:34

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='', max_length=32, verbose_name='昵称')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女'), ('NA', '待定')], default='NA', max_length=10, verbose_name='性别')),
                ('address', models.CharField(default='', max_length=100, verbose_name='地址')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('image', models.ImageField(blank=True, default='static/base/static/image/default.png', max_length=200, null=True, upload_to='static/base/static/%username/image/%Y%m')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='邮箱')),
                ('usertype', models.CharField(blank=True, choices=[('Trainer', '咨询授课'), ('Partner', '业务开拓')], default='Partner', max_length=20, null=True, verbose_name='用户类型')),
                ('is_webuser', models.BooleanField(default=False, verbose_name='是否网页用户')),
                ('Dummy_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='流水号')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BUMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('BU_code', models.CharField(max_length=20, unique=True, verbose_name='BU代码')),
                ('BU_name', models.CharField(max_length=60, verbose_name='BU名称')),
                ('BU_type', models.CharField(choices=[('P', '个人'), ('E', '企业'), ('*', '待定')], max_length=60, verbose_name='BU类型')),
                ('BU_taxcode', models.CharField(blank=True, max_length=40, null=True, verbose_name='BU税号')),
                ('BU_startdate', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='开始日期')),
                ('BU_expirydate', models.DateField(null=True, verbose_name='到期日期')),
                ('BU_evidence', models.FileField(blank=True, max_length=200, null=True, upload_to='', verbose_name='证明材料')),
                ('BU_status', models.CharField(choices=[('00', '待办'), ('OK', '正常'), ('XX', '停止')], default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('BU_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('BU_accounts', models.IntegerField(default=1, verbose_name='订购账户数')),
            ],
            options={
                'verbose_name': '实体',
                'verbose_name_plural': '经营实体',
            },
        ),
        migrations.CreateModel(
            name='BuParameter',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Bu_paratype', models.CharField(choices=[('industry', '所属行业'), ('scale', '规模'), ('service', '服务类型')], max_length=10, verbose_name='参数类型')),
                ('Bu_parakey', models.CharField(blank=True, max_length=10, null=True, verbose_name='参数值')),
                ('Bu_paravalue', models.CharField(blank=True, max_length=40, null=True, verbose_name='参数名称')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
            ],
            options={
                'verbose_name': '参数设置',
                'verbose_name_plural': 'BU参数',
                'ordering': ['Bu_code', 'Bu_paratype', 'Bu_parakey'],
            },
        ),
        migrations.CreateModel(
            name='change_into',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '转入分析',
                'verbose_name_plural': '转入分析',
            },
        ),
        migrations.CreateModel(
            name='change_out',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '转出分析',
                'verbose_name_plural': '转出分析',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forget', '找回密码'), ('update_email', '修改邮箱')], max_length=30)),
                ('send_time', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='服务代码')),
                ('Item_desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='说明')),
                ('Item_unit', models.CharField(blank=True, max_length=10, null=True, verbose_name='计量单位')),
                ('Item_baseprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='基础定价')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
            ],
            options={
                'verbose_name': '服务Item',
                'verbose_name_plural': '服务Item',
                'ordering': ['Data_bu', 'Item_code'],
            },
        ),
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_datetime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='日期')),
            ],
            options={
                'verbose_name': '关注',
                'verbose_name_plural': '关注维护',
            },
        ),
        migrations.CreateModel(
            name='UserThumbup',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_datetime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='日期')),
            ],
            options={
                'verbose_name': '点赞',
                'verbose_name_plural': '点赞维护',
            },
        ),
    ]
