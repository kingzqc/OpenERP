# Generated by Django 2.2.26 on 2023-05-25 09:34

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crm', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ppm', '0001_initial'),
        ('base', '0002_auto_20230525_1734'),
        ('doc', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlowType',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Flowtype_code', models.CharField(choices=[('STD', '标准'), ('SHORT', '快捷')], default='STD', max_length=10, null=True, verbose_name='流程类型')),
                ('Flowtype_desc', models.CharField(max_length=200, null=True, verbose_name='说明')),
                ('Flowtype_usage', models.CharField(choices=[('USR', '普通日程'), ('CRM', '商机管理'), ('PRJ', '项目管理')], default='C', max_length=10, null=True, verbose_name='用途')),
                ('Flowtype_active', models.BooleanField(blank=True, default=0, null=True, verbose_name='活跃')),
                ('Data_security', models.CharField(blank=True, choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, null=True, verbose_name='权限级别')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BU_nameft', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Flow_usersc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Flow_userso', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
            ],
            options={
                'verbose_name': '流程类型',
                'verbose_name_plural': '流程类型',
                'ordering': ['Data_bu', 'Flowtype_code'],
                'unique_together': {('Data_bu', 'Flowtype_code', 'Flowtype_usage')},
            },
        ),
        migrations.CreateModel(
            name='RequestCatalogue',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Catalogue_code', models.CharField(max_length=10, null=True, verbose_name='目录代码')),
                ('Catalogue_desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='目录说明')),
                ('Catalogue_type', models.CharField(choices=[('CAL', '日历类型'), ('OPD', 'CRM类型'), ('PRD', '交付类型')], max_length=10, verbose_name='目录类型')),
                ('Catalogue_active', models.BooleanField(blank=True, null=True, verbose_name='活跃')),
                ('Catalogue_comments', models.TextField(blank=True, max_length=400, verbose_name='备注')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cat_namerc', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cat_usersc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cat_userso', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
            ],
            options={
                'verbose_name': '日程目录',
                'verbose_name_plural': '日程目录',
                'ordering': ['Data_bu', 'Catalogue_type', 'Catalogue_code'],
                'unique_together': {('Data_bu', 'Catalogue_code')},
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('RequestType_code', models.CharField(max_length=20, null=True, verbose_name='日程类型')),
                ('RequestType_desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='类型说明')),
                ('Request_mustcont', models.BooleanField(default=1, null=True, verbose_name='联系必填')),
                ('Request_mustcust', models.BooleanField(default=1, null=True, verbose_name='客户必填')),
                ('Request_mustoppo', models.BooleanField(default=1, null=True, verbose_name='商机必填')),
                ('Request_mustproj', models.BooleanField(default=1, null=True, verbose_name='项目必填')),
                ('Request_mustdocu', models.BooleanField(default=1, null=True, verbose_name='文档必填')),
                ('Request_mustitem', models.BooleanField(default=1, null=True, verbose_name='服务必填')),
                ('Request_creatorrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可创建角色')),
                ('Request_approverrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可审批角色')),
                ('Request_realizerrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可实现角色')),
                ('Request_processorrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可处理角色')),
                ('Request_reopenerrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可重开角色')),
                ('Request_backerrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可退回角色')),
                ('Request_deleterrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可删除角色')),
                ('Request_openoverdue', models.IntegerField(default=8, verbose_name='待办时长（小时）')),
                ('Request_approveoverdue', models.IntegerField(default=8, verbose_name='审批时长（小时）')),
                ('Request_realizeoverdue', models.IntegerField(default=8, verbose_name='实现时长（小时）')),
                ('Request_totaloverdue', models.IntegerField(default=24, verbose_name='总共时长（小时）')),
                ('RequestType_active', models.BooleanField(null=True, verbose_name='停用（是/否）')),
                ('RequestType_comments', models.TextField(max_length=800, verbose_name='备注')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_namert', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_usero', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
                ('RequestType_catalogue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cat_coder', to='workflow.RequestCatalogue', verbose_name='日程目录')),
                ('Request_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userac', to=settings.AUTH_USER_MODEL, verbose_name='可审批人')),
                ('Request_backer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userbc', to=settings.AUTH_USER_MODEL, verbose_name='可退回人')),
                ('Request_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_usercc', to=settings.AUTH_USER_MODEL, verbose_name='可创建人')),
                ('Request_deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userdlc', to=settings.AUTH_USER_MODEL, verbose_name='可删除人')),
                ('Request_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userpc', to=settings.AUTH_USER_MODEL, verbose_name='可处理人')),
                ('Request_realizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userrc', to=settings.AUTH_USER_MODEL, verbose_name='可实现人')),
                ('Request_reopener', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userroc', to=settings.AUTH_USER_MODEL, verbose_name='可重开人')),
            ],
            options={
                'verbose_name': '日程类型',
                'verbose_name_plural': '日程类型',
                'ordering': ['Data_bu', 'RequestType_catalogue', 'RequestType_code'],
                'unique_together': {('Data_bu', 'RequestType_code')},
            },
        ),
        migrations.CreateModel(
            name='RequestMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Dummy_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='流水号')),
                ('Request_desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='日程说明')),
                ('Request_cataloguetype', models.CharField(blank=True, max_length=20, null=True, verbose_name='日程目录类型')),
                ('Request_date', models.DateField(blank=True, null=True, verbose_name='变更日期')),
                ('Request_duration', models.DecimalField(decimal_places=1, default=0.0, max_digits=10, verbose_name='持续时间（小时）')),
                ('Request_initdate', models.DateField(blank=True, null=True, verbose_name='开始日期')),
                ('Request_inittime', models.TimeField(blank=True, null=True, verbose_name='开始时间')),
                ('Request_enddate', models.DateField(blank=True, null=True, verbose_name='结束日期')),
                ('Request_endtime', models.TimeField(blank=True, null=True, verbose_name='结束时间')),
                ('Request_actduration', models.DecimalField(decimal_places=1, default=0.0, max_digits=10, verbose_name='实际持续时间（小时）')),
                ('Request_actinitdate', models.DateField(blank=True, null=True, verbose_name='实际开始日期')),
                ('Request_actinittime', models.TimeField(blank=True, null=True, verbose_name='实际开始时间')),
                ('Request_actenddate', models.DateTimeField(blank=True, null=True, verbose_name='实际结束日期')),
                ('Request_actendtime', models.DateTimeField(blank=True, null=True, verbose_name='实际结束时间')),
                ('Request_usage', models.CharField(choices=[('USR', '普通日程'), ('CRM', '商机管理'), ('PRJ', '项目管理')], default='', max_length=10, null=True, verbose_name='用途')),
                ('Request_nextrequest', models.CharField(blank=True, max_length=20, null=True, verbose_name='接续日程')),
                ('Request_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='数量')),
                ('Request_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='价格')),
                ('Request_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='金额')),
                ('Request_actquantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='实际数量')),
                ('Request_actprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='实际价格')),
                ('Request_actamount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='实际金额')),
                ('Request_status', models.CharField(blank=True, choices=[('00', '待办'), ('10', '已批准'), ('20', '已实现'), ('30', '已处理')], max_length=2, null=True, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Request_comments', models.TextField(max_length=800, verbose_name='备注')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Data_creatorrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可创建角色')),
                ('Data_approverrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可审批角色')),
                ('Data_realizerrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可实现角色')),
                ('Data_processorrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可处理角色')),
                ('Data_reopenerrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可重开角色')),
                ('Data_backerrrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可退回角色')),
                ('Data_deleterrole', models.CharField(blank=True, choices=[('self', '自己'), ('mgr', '上级'), ('accmgr', '客户经理'), ('oppmgr', '商机经理'), ('prjmgr', '项目经理'), ('admin', '系统管理员')], max_length=20, null=True, verbose_name='可删除角色')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='日期')),
                ('Request_isyes', models.BooleanField(default=1, null=True, verbose_name='是否执行')),
                ('Request_cancel', models.BooleanField(default=0, null=True, verbose_name='取消(是/否)')),
                ('Data_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_usersa', to=settings.AUTH_USER_MODEL, verbose_name='审批者')),
                ('Data_backer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userbp', to=settings.AUTH_USER_MODEL, verbose_name='退回者')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_usersc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_delegator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userdd', to=settings.AUTH_USER_MODEL, verbose_name='代理者')),
                ('Data_deleter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userdp', to=settings.AUTH_USER_MODEL, verbose_name='删除者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userso', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
                ('Data_processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userpp', to=settings.AUTH_USER_MODEL, verbose_name='处理者')),
                ('Data_realizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userrr', to=settings.AUTH_USER_MODEL, verbose_name='实现者')),
                ('Data_reopener', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Req_userrp', to=settings.AUTH_USER_MODEL, verbose_name='处理者')),
                ('Request_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_coder', to=settings.AUTH_USER_MODEL, verbose_name='经办人')),
                ('Request_auxresource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Aux_resource0', to='doc.ResourceMaster', verbose_name='辅助资源')),
                ('Request_basecompetence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Request_competenceb', to='doc.BaseCompetence', verbose_name='基础能力')),
                ('Request_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Contact_coder', to='crm.ContactMaster', verbose_name='联系人')),
                ('Request_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Customer_coder', to='crm.CustomerMaster', verbose_name='客户')),
                ('Request_flowcycle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Request_cycle', to='workflow.FlowType', verbose_name='销售周期')),
                ('Request_mainresource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Main_resource0', to='doc.ResourceMaster', verbose_name='主要资源')),
                ('Request_opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Opportunity_coder', to='crm.OpportunityMaster', verbose_name='商机')),
                ('Request_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Prj_coder', to='ppm.ProjectMaster', verbose_name='项目')),
                ('Request_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Request_coder', to='workflow.RequestMaster', to_field='Dummy_id', verbose_name='关联日程')),
                ('Request_serviceitem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Item_coder', to='base.ItemMaster', verbose_name='服务内容')),
                ('Request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Type_code', to='workflow.RequestType', verbose_name='日程类型')),
            ],
            options={
                'verbose_name': '工作流',
                'verbose_name_plural': '工作流',
                'ordering': ['Data_bu', 'Request_type'],
            },
        ),
        migrations.CreateModel(
            name='RequestAction',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Request_action', models.CharField(choices=[('OO', '待办'), ('RO', '重开'), ('AP', '批准'), ('RL', '实现'), ('PR', '处理'), ('RT', '退回'), ('XX', '停用')], default='OO', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='操作码')),
                ('Action_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='操作时间')),
                ('Request_comments', models.TextField(max_length=400, verbose_name='操作意见')),
                ('Action_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Action_user', to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Request_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Action_reqid', to='workflow.RequestMaster', verbose_name='日程ID')),
            ],
            options={
                'verbose_name': '工作流操作记录',
                'verbose_name_plural': '工作流操作记录',
                'ordering': ['Data_id', 'Request_id'],
            },
        ),
        migrations.CreateModel(
            name='FlowCycleMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Flowcycle_stagedesc', models.CharField(blank=True, max_length=30, null=True, verbose_name='阶段说明')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BU_namefc', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Flow_userfc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Flow_userfo', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
                ('Flowcycle_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Request_stage', to='workflow.RequestType', verbose_name='阶段')),
                ('Flowcycle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Flow_type', to='workflow.FlowType', verbose_name='流程类型')),
            ],
            options={
                'verbose_name': '流程周期',
                'verbose_name_plural': '流程周期',
            },
        ),
        migrations.CreateModel(
            name='RequestApprove',
            fields=[
            ],
            options={
                'verbose_name': '工作流批准',
                'verbose_name_plural': '工作流批准',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
        migrations.CreateModel(
            name='RequestBackward',
            fields=[
            ],
            options={
                'verbose_name': '工作流回退',
                'verbose_name_plural': '工作流回退',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
        migrations.CreateModel(
            name='RequestPause',
            fields=[
            ],
            options={
                'verbose_name': '工作流暂停',
                'verbose_name_plural': '工作流暂停',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
        migrations.CreateModel(
            name='RequestProcess',
            fields=[
            ],
            options={
                'verbose_name': '工作流处理',
                'verbose_name_plural': '工作流处理',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
        migrations.CreateModel(
            name='RequestRealize',
            fields=[
            ],
            options={
                'verbose_name': '工作流实现',
                'verbose_name_plural': '工作流实现',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
        migrations.CreateModel(
            name='RequestReopen',
            fields=[
            ],
            options={
                'verbose_name': '工作流重开',
                'verbose_name_plural': '工作流重开',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workflow.requestmaster',),
        ),
    ]
