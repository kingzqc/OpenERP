# Generated by Django 2.2.26 on 2023-05-25 09:34

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('crm', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseCompetence',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('BaseCompetence_timestart', models.TimeField(blank=True, null=True, verbose_name='开始时间')),
                ('BaseCompetence_timeend', models.TimeField(blank=True, null=True, verbose_name='结束时间')),
                ('BaseCompetence_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='数量')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('is_quantity', models.BooleanField(default=False, verbose_name='是否数量')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
            ],
            options={
                'verbose_name': '基础能力',
                'verbose_name_plural': '基础能力维护',
            },
        ),
        migrations.CreateModel(
            name='ContentClass',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('ContentClass_brief', models.CharField(choices=[('TOPIC', '主题'), ('RESOURCE', '资源'), ('SERVICE', '服务'), ('WORKFLOW', '流程'), ('RESULT', '成果'), ('ABOUT', '关于我们')], max_length=10, unique=True, verbose_name='目录名')),
                ('ContentClass_urlkey', models.CharField(max_length=20, verbose_name='URL keywords')),
                ('ContentClass_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='目录说明')),
                ('ContentClass_image', models.ImageField(blank=True, default='static/base/static/image/default.png', null=True, upload_to='static/base/static/website/image/%Y%m', verbose_name='图片资料(2560X300)')),
                ('is_pagetop', models.BooleanField(default=True, verbose_name='是否页头展示')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
                ('ContentClass_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Resource_codecc', to=settings.AUTH_USER_MODEL, verbose_name='所属人')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Data_budx', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
            ],
            options={
                'verbose_name': '内容目录',
                'verbose_name_plural': '内容目录维护',
            },
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('ContentType_brief', models.CharField(max_length=20, verbose_name='类型摘要')),
                ('ContentType_urlkey', models.CharField(blank=True, max_length=100, null=True, verbose_name='类型URL')),
                ('ContentType_tag', models.CharField(blank=True, max_length=20, null=True, verbose_name='标签')),
                ('ContentType_detail', models.TextField(blank=True, max_length=600, null=True, verbose_name='详情')),
                ('ContentType_image', models.ImageField(blank=True, default='static/base/static/image/default.png', null=True, upload_to='static/base/static/website/image/%Y%m', verbose_name='图片资料(400x320)')),
                ('ContentType_attachment', models.FileField(blank=True, null=True, upload_to='static/base/static/website/attachment/%Y%m', verbose_name='附件')),
                ('Content_shape', models.CharField(blank=True, choices=[('HUMAN', '人力资源'), ('SPACE', '空间资源'), ('ED', '电子数据')], max_length=10, null=True, verbose_name='内容形态')),
                ('is_pagetop', models.BooleanField(default=False, verbose_name='是否页头展示')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
                ('ContentType_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Content_class0', to='doc.ContentClass', to_field='ContentClass_brief', verbose_name='所属目录')),
            ],
            options={
                'verbose_name': '内容类型',
                'verbose_name_plural': '内容类型维护',
            },
        ),
        migrations.CreateModel(
            name='DocumentMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Document_code', models.CharField(max_length=20, verbose_name='文档代码')),
                ('Document_version', models.CharField(blank=True, max_length=20, null=True, verbose_name='文档版本')),
                ('Document_subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='文档标题')),
                ('Document_body', models.TextField(blank=True, null=True, verbose_name='文档要点')),
                ('Document_type', models.CharField(blank=True, choices=[('QT', '报价'), ('CT', '合同'), ('DF', '初步方案'), ('SL', '正式方案'), ('OT', '其它')], max_length=10, null=True, verbose_name='类型')),
                ('Document_attachment', models.FileField(blank=True, null=True, upload_to='', verbose_name='附件')),
                ('Data_security', models.CharField(choices=[('10', '10'), ('30', '30'), ('50', '50'), ('100', '100')], max_length=10, verbose_name='权限级别')),
                ('Document_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Document_initdate', models.DateField(blank=True, null=True, verbose_name='创建日期')),
                ('Document_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='日期')),
                ('Dummy_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='流水号')),
                ('Data_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Doc_nameda', to=settings.AUTH_USER_MODEL, verbose_name='审批人')),
                ('Data_bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Doc_bud0', to='base.BUMaster', to_field='BU_code', verbose_name='所属BU')),
                ('Data_creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Doc_namedc', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Doc_namedo', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
            ],
            options={
                'verbose_name': '文档',
                'verbose_name_plural': '文档维护',
            },
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('JobType_code', models.CharField(max_length=20, verbose_name='交付方式')),
                ('JobType_content', models.CharField(blank=True, max_length=200, null=True, verbose_name='简要说明')),
                ('JobType_detail', models.TextField(blank=True, max_length=600, null=True, verbose_name='详细说明')),
                ('JobType_image', models.ImageField(blank=True, default='static/base/static/image/default.png', null=True, upload_to='static/base/static/website/image/%Y%m', verbose_name='图片资料(400x320)')),
                ('JobType_attachment', models.FileField(blank=True, null=True, upload_to='static/base/static/website/attachment/%Y%m', verbose_name='附件')),
                ('is_pagetop', models.BooleanField(default=False, verbose_name='是否页头展示')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
            ],
            options={
                'verbose_name': '交付方式',
                'verbose_name_plural': '交付方式维护',
            },
        ),
        migrations.CreateModel(
            name='ResourceMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Resource_nickname', models.CharField(default='noname', max_length=20, verbose_name='资源标题')),
                ('Resource_basecity', models.CharField(blank=True, max_length=20, null=True, verbose_name='所在城市')),
                ('Resource_contactinfo', models.CharField(blank=True, max_length=20, null=True, verbose_name='联络信息')),
                ('Resource_brief', models.CharField(blank=True, max_length=200, null=True, verbose_name='资源简介')),
                ('Resource_feature', models.TextField(blank=True, max_length=400, null=True, verbose_name='资源特点')),
                ('Resource_value', models.TextField(blank=True, max_length=400, null=True, verbose_name='资源价值')),
                ('Resource_summary', models.TextField(blank=True, max_length=400, null=True, verbose_name='资源结论')),
                ('Resource_basicprice', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='参考价')),
                ('Resource_image', models.ImageField(blank=True, default='static/base/static/image/default.png', null=True, upload_to='static/base/static/website/image/%Y%m', verbose_name='图片资料(400x320)')),
                ('Resource_attachment', models.FileField(blank=True, null=True, upload_to='static/base/static/website/attachment/%Y%m', verbose_name='附件')),
                ('is_pagetop', models.BooleanField(default=False, verbose_name='是否页头展示')),
                ('Resource_recommendindex', models.IntegerField(blank=True, default=0, null=True, verbose_name='推荐指数')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
                ('Dummy_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='流水号')),
                ('Data_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Rescco_userro', to=settings.AUTH_USER_MODEL, verbose_name='协调人')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Resc_userro', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
                ('Resource_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Resource_codern', to=settings.AUTH_USER_MODEL, verbose_name='相关人（可空）')),
                ('Resource_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Content_type1', to='doc.ContentType', verbose_name='类型')),
            ],
            options={
                'verbose_name': '资源',
                'verbose_name_plural': '资源维护',
            },
        ),
        migrations.CreateModel(
            name='ResourceCompetence',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Resource_date', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='能力日期')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否可用')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
                ('Resource_basecompetence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Resource_competenceb', to='doc.BaseCompetence', verbose_name='基础能力')),
                ('Resource_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Resource_coderc', to='doc.ResourceMaster', verbose_name='资源名')),
            ],
            options={
                'verbose_name': '资源能力',
                'verbose_name_plural': '资源能力维护',
            },
        ),
        migrations.CreateModel(
            name='JobMaster',
            fields=[
                ('Data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('Job_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='服务名称')),
                ('Job_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Job参考价')),
                ('Job_brief', models.TextField(blank=True, max_length=100, null=True, verbose_name='Job简介')),
                ('Job_feature', models.TextField(blank=True, max_length=200, null=True, verbose_name='Job特色')),
                ('Job_target', models.TextField(blank=True, max_length=200, null=True, verbose_name='Job目标')),
                ('Job_detail', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Job大纲')),
                ('Job_image', models.ImageField(blank=True, default='static/base/static/image/default.png', null=True, upload_to='static/base/static/website/image/%Y%m', verbose_name='图片资料(400x320)')),
                ('Job_attachment', models.FileField(blank=True, null=True, upload_to='static/base/static/website/attachment/%Y%m', verbose_name='Job附件')),
                ('is_pagetop', models.BooleanField(default=False, verbose_name='是否页头展示')),
                ('Job_recommendindex', models.IntegerField(blank=True, default=0, null=True, verbose_name='推荐指数')),
                ('Data_status', models.CharField(default='OK', max_length=2, validators=[django.core.validators.MinLengthValidator(1, message='20警示：')], verbose_name='状态')),
                ('Data_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('Data_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='建立日期')),
                ('Dummy_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='流水号')),
                ('Data_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Jobco_userjo', to=settings.AUTH_USER_MODEL, verbose_name='协调人')),
                ('Data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Job_userjo', to=settings.AUTH_USER_MODEL, verbose_name='拥有者')),
                ('Job_auxresource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Job_resource2', to='doc.ResourceMaster', verbose_name='辅助资源')),
                ('Job_contenttype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Job_conttype', to='doc.ContentType', verbose_name='内容类型')),
                ('Job_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Job_resource1', to='doc.ResourceMaster', verbose_name='主要资源')),
                ('Job_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='JobType_code2', to='doc.JobType', verbose_name='工作形式')),
            ],
            options={
                'verbose_name': 'JOB',
                'verbose_name_plural': '服务维护',
            },
        ),
        migrations.AddField(
            model_name='basecompetence',
            name='BaseCompetence_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Competence_type1', to='doc.ContentType', verbose_name='内容类型'),
        ),
        migrations.CreateModel(
            name='ResourceEdit',
            fields=[
            ],
            options={
                'verbose_name': '编辑资料',
                'verbose_name_plural': '编辑资料',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('doc.resourcemaster',),
        ),
        migrations.CreateModel(
            name='DocumentRelated',
            fields=[
                ('documentmaster_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='doc.DocumentMaster')),
                ('DocRelated_initdate', models.DateField(blank=True, null=True, verbose_name='创建日期')),
                ('DocRelated_changedate', models.DateField(auto_now=True, null=True, verbose_name='修订日期')),
                ('DocRelated_Contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Cont_namedr', to='crm.ContactMaster', verbose_name='相关联系人')),
            ],
            options={
                'verbose_name': '相关文档',
                'verbose_name_plural': '相关文档维护',
            },
            bases=('doc.documentmaster',),
        ),
    ]
